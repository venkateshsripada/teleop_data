#!/usr/bin/env python
PACKAGE = "panda_teleoperation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("translational_x_stiffness", double_t, 0, "Cartesian X-translational stiffness", 0, 0, 400)
gen.add("translational_y_stiffness", double_t, 0, "Cartesian Y-translational stiffness", 0, 0, 400)
gen.add("translational_z_stiffness", double_t, 0, "Cartesian Z-translational stiffness", 0, 0, 400)
gen.add("rotational_x_stiffness", double_t, 0, "Cartesian X-rotational stiffness", 0, 0, 30)
gen.add("rotational_y_stiffness", double_t, 0, "Cartesian Y-rotational stiffness", 0, 0, 30)
gen.add("rotational_z_stiffness", double_t, 0, "Cartesian Z-rotational stiffness", 0, 0, 30)
gen.add("nullspace_stiffness", double_t, 0, "Stiffness of the joint space nullspace controller (the desired configuration is the one at startup)", 0, 0, 100)

gen.add("task_haptic_x_force", double_t, 0, "Haptic force in x direction", 0, -20, 20)
gen.add("task_haptic_y_force", double_t, 0, "Haptic force in y direction", 0, -20, 20)
gen.add("task_haptic_z_force", double_t, 0, "Haptic force in z direction", 0, -20, 20)

gen.add("task_haptic_x_torque", double_t, 0, "Haptic force in x direction", 0, -2.5, 2.5)
gen.add("task_haptic_y_torque", double_t, 0, "Haptic force in y direction", 0, -2.5, 2.5)
gen.add("task_haptic_z_torque", double_t, 0, "Haptic force in z direction", 0, -2.5, 2.5)

exit(gen.generate(PACKAGE, "panda_teleoperation", "panda_leader_compliance_param"))